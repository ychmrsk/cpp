------------------------------------------------------------
X glob(2);  // global

X(int v) { out("X(int)", v); val=v; }
X(int 2) { out("X(int)", 2); val=2; }
this->X(int):val (2)  // val not initialized
this->X(int):0 (2)  // global

============================================================
// in main
============================================================
X loc(4);

X(int v) { out("X(int)", v); val=v; }
X(int 4) { out("X(int)", 4); val=4; }
this->X(int):val (4)  // val not initialized
this->X(int):13 (2)  // local

------------------------------------------------------------
X loc2 = loc;

X(const X& x) { out("X(X&)", x.val); val=x.val; }
X(loc) { out("X(X&)", loc.val); val=loc.val; }
this->X(X&): val (loc.val) // val not initialized
this->X(X&): 455846672 (4)

------------------------------------------------------------
loc = X(5);

this->(int): val (5)
this->(int): 455838304 (5)

X& operator=(const X& a) { out("X::operator=()", a.val}; val=a.val; return *this; }
X& operator=(const X& X(5)) { out("X::operator=()", 5); val=5; return X(5); }
this->X::operator=(): val (5)  // previous value 4?
this->X::operator=(): 4 (5)

~X() { out("~X()", 0); }
this->~X(): 5 (0)

------------------------------------------------------------
loc2 = copy(loc);

X copy(X a) { return a; }
X copy(loc) { return loc; }
loc2 = loc;
this->X::operator=(): 4 (5)
this->~X(): 5 (0)

------------------------------------------------------------
loc2 = copy2(loc);

X copy2(X a) { X aa=a; return aa; }
X copy2(loc) { X aa=loc; return loc; }
X aa = loc;  loc2 = aa;


------------------------------------------------------------
X loc3(6);



------------------------------------------------------------
X& r = ref_to(loc);



------------------------------------------------------------
delete make(7);
------------------------------------------------------------
delete make(8);
------------------------------------------------------------
vector<X> v(4);
------------------------------------------------------------
XX loc4;
------------------------------------------------------------
X* p = new X(9);
------------------------------------------------------------
delete p;
------------------------------------------------------------
X* pp = new X[5];
------------------------------------------------------------
delete[] pp;
------------------------------------------------------------







============================================================
#  X glob(2);
#  0x603214->X(int): 0 (2)
X(int 2) { out("X(int)", 2); val=2; }
{ cerr << this << "->" << X(int) << ": " << val << " (" << 2 << ")\n"; }
{ cerr << &glob(2) << "->" << X(int) << ": " << glob(2).val << " (" << 2 << ")\n"; }
=> glob.val = 2;

#  X loc(4);
#  0x7ffc68885a10->X(int): 13 (4)
X(int 4) { out("X(int)", 4); val=4; }
{ cerr << this << "->" << X(int) << ": " << val << " (" << 4 << ")\n"; }
{ cerr << &loc(4) << "->" << X(int) << ": " << loc(4).val << " (" << 4 << ")\n"; }
=> glob.val = 2, loc.val = 4;

#  X loc2 = loc;
#  0x7ffc68885a20->X(X&) : 455836672 (4)
X(const X& loc) { out("X(X&) ", loc.val); val=loc.val; }
X(const X& loc) { out("X(X&) ", 4); val=4; }
{ cerr << this << "->" << X(X&) << ": " << val << " (" << 4 << ")\n"; }
{ cerr << &loc2 << "->" << X(X&) << ": " << loc2.val << " (" << 4 << ")\n"; }
=> glob.val = 2, loc.val = 4, loc2.val = 4;

#  loc = X(5);
#  0x7ffc68885a30->X(int): 455838304 (5)
X(int 5) { out("X(int)", 5); val=5; }
{ cerr << this << "->" << X(int) << ": " << val << " (" << 5 << ")\n"; }
{ cerr << &X(5) << "->" << X(int) << ": " << X(5).val << " (" << 5 << ")\n"; }
=> glob.val = 2, loc.val = 4, loc2.val = 4, X(5).val = 5;
#  0x7ffc68885a10->X::operator=(): 4 (5)
X& operator=(const X& X(5)) { out("X::operator=()", X(5).val); val=X(5).val; return *this; }
X& operator=(const X& X(5)) { out("X::operator=()", 5); val=5; return *this; }
{ cerr << this << "->" << X::operator=() << ": " << val << " (" << 5 << ")\n"; }
{ cerr << &loc << "->" << X::operator=() << ": " << loc.val << " (" << 5 << ")\n"; }
{ cerr << &loc << "->" << X::operator=() << ": " << 4 << " (" << 5 << ")\n"; }
=> glob.val = 2, loc.val = 5, loc2.val = 4, X(5).val = 5
#  0x7ffc68885a30->~X(): 5 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << ~X() << ": " << val << " (" << 0 << ")\n"; }
{ cerr << &X(5) << "->" << ~X() << ": " << X(5).val << " (" << 0 << ")\n"; }
{ cerr << &X(5) << "->" << ~X() << ": " << 5 << " (" << 0 << ")\n"; }
=> glob.val = 2, loc.val = 5, loc2.val = 4

#  loc2 = copy(loc);
#  0x7ffc68885a40->X(X&) : 1753766480 (5)
X copy(X loc) { return loc; }
X(const X& loc) { out("X(X&) ", loc.val); val=loc.val; }
X(const X& loc) { out("X(X&) ", 5); val=5; }
{ cerr << this << "->" << X(X&) << ": " << val << " (" << 5 << ")\n"; }
{ cerr << &loc2 << "->" << X(X&) << ": " << loc2.val << " (" << 5 << ")\n"; }
=> glob.val = 2, loc.val = 5, loc2.val = 5

#  loc2 = copy2(loc);
X copy2(X loc) { X aa = loc; return aa; }
## X copy2.aa = loc; loc2 = aa; delete aa;
## X copy2.aa = loc;
#  0x7ffc68885a50->X(X&) : 1852385368 (5)
X(const X& loc) { out("X(X&) ", loc.val); val=loc.val; }
X(const X& loc) { out("X(X&) ", 5); val=5; }
{ cerr << this << "->" << X(X&) << ": " << val << " (" << 5 << ")\n"; }
{ cerr << &copy2.aa << "->" << X(X&) << ": " << copy2.aa.val << " (" << 5 << ")\n"; }
=> glob.val = 2, loc.val = 5, loc2.val = 5, copy2.aa.val = 5;
## loc2 = aa;
#  0x7ffc68885a20->X::operator=(): 4 (5)
X& operator=(const X& aa) { out("X::operator=()", aa.val); val=aa.val; return *this; }
X& operator=(const X& aa) { out("X::operator=()", 5); val=5; return *this; }
{ cerr << this << "->" << X::operator=() << ": " << val << " (" << 5 << ")\n"; }
{ cerr << &loc2 << "->" << X::operator=() << ": " << loc2.val << " (" << 5 << ")\n"; }
=> glob.val = 2, loc.val = 5, loc2.val = 5, aa.val = 5, copy2(loc).val = 5;
#  0x7ffc68885a50->~X(): 5 (0)
~X() { out("~X()", 0); }  // rvalue of assingment
{ cerr << this << "->" << ~X() << ": " << val << " (" << 0 << ")\n"; }
=> glob.val = 2, loc.val = 5, loc2.val = 5, aa.val = 5;
## delete aa;
#  0x7ffc68885a40->~X(): 5 (0)
~X() { out("~X()", 0); }  // local scope of function copy2
{ cerr << this << "->" << ~X() << ": " << val << " (" << 0 << ")\n"; }
{ cerr << &copy2.aa << "->" << ~X() << ": " << copy2.aa.val << " (" << 0 << ")\n"; }
=> glob.val = 2, loc.val = 5, loc2.val = 5;


# X loc3(6);  // ???


# X& r = ref_to(loc);
X& ref_to(X& a) { return a; }
X& ref_to(X& loc) { return loc; }

#  0x7ffc68885a60->X(X&) : 6303968 (5)
X(const X& x) { out("X(X&) ", x.val); val=x.val; }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x7ffc68885a70->X(X&) : 1 (5)
X(const X& x) { out("X(X&) ", x.val); val=x.val; }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x7ffc68885a20->X::operator=(): 5 (5)
X& operator=(const X& a) { out("X::operator=()", a.val); val=a.val; return *this; }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x7ffc68885a70->~X(): 5 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x7ffc68885a60->~X(): 5 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x7ffc68885a80->X(int): 6303208 (6)
X(int v) { out("X(int)", v); val=v; }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x7ffc688859e0->X(int): 690509950 (7)
X(int v) { out("X(int)", v); val=v; }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c20->X(X&) : 0 (7)
X(const X& x) { out("X(X&) ", x.val); val=x.val; }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x7ffc688859e0->~X(): 7 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c20->~X(): 7 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x7ffc688859e0->X(int): 37116960 (8)
X(int v) { out("X(int)", v); val=v; }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c20->X(X&) : 0 (8)
X(const X& x) { out("X(X&) ", x.val); val=x.val; }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x7ffc688859e0->~X(): 8 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c20->~X(): 8 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c20->X(): 0 (0)
X() { out("X()", 0); val=0; }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c24->X(): 0 (0)
X() { out("X()", 0); val=0; }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c28->X(): 0 (0)
X() { out("X()", 0); val=0; }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c2c->X(): 0 (0)
X() { out("X()", 0); val=0; }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x7ffc68885a90->X(): 1136 (0)
X() { out("X()", 0); val=0; }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x7ffc68885a94->X(): 0 (0)
X() { out("X()", 0); val=0; }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c40->X(int): 0 (9)
X(int v) { out("X(int)", v); val=v; }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c40->~X(): 9 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c68->X(): 0 (0)
X() { out("X()", 0); val=0; }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c6c->X(): 0 (0)
X() { out("X()", 0); val=0; }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c70->X(): 0 (0)
X() { out("X()", 0); val=0; }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c74->X(): 0 (0)
X() { out("X()", 0); val=0; }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c78->X(): 0 (0)
X() { out("X()", 0); val=0; }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c78->~X(): 0 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c74->~X(): 0 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c70->~X(): 0 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c6c->~X(): 0 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c68->~X(): 0 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x7ffc68885a94->~X(): 0 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x7ffc68885a90->~X(): 0 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c20->~X(): 0 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c24->~X(): 0 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c28->~X(): 0 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x2365c2c->~X(): 0 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x7ffc68885a80->~X(): 6 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x7ffc68885a20->~X(): 5 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x7ffc68885a10->~X(): 5 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }

#  0x603214->~X(): 2 (0)
~X() { out("~X()", 0); }
{ cerr << this << "->" << s << ": " << val << " (" << nv << ")\n"; }









============================================================
X glob(2)
------------------------------------------------------------
X(int v) { out("X(int)", v); val=v; }
this->X(int): val (v)
glob->X(int): glob.val (2)

  glob  : 0x603214->X(int): 0 (2)

# glob.val = 2
============================================================
X loc(4)
------------------------------------------------------------
X(int v) { out("X(int)", v); val=v; }
this->X(int): val (v)
loc->X(int): loc.val (4)

  loc   : 0x7ffc68885a10->X(int): 13 (4)

# loc.val = 4
============================================================
X loc2 = loc
------------------------------------------------------------
X(const X& x) { out("X(X&)", x.val); val=x.val; }
this->X(X&): val (x.val)
loc2->X(X&): loc2.val (loc.val)

  loc2  : 0x7ffc68885a20->X(X&) : 455836672 (4)

# loc2.val = loc.val = 4
============================================================
loc = X(5)
------------------------------------------------------------
X(int v) { out("X(int)", v); val=v; }
this->X(int): val (v)
X(5)->X(int): X(5).val (5)

  X(5)  : 0x7ffc68885a30->X(int): 455838304 (5)

# X(5).val = 5

X& operator=(const X& a) { out("X::operator=()", a.val); val=a.val; return *this; }
this->X::operator=(): val (a.val)
loc->X::operator=(): loc.val (X(5).val)

  loc   : 0x7ffc68885a10->X::operator=(): 4 (5)

# loc.val = 5

~X() { out("~X()", 0); }
this->~X(): val (v)
X(5)->~X(): X(5).val (0)

  X(5)  : 0x7ffc68885a30->~X(): 5 (0)
============================================================
loc2 = copy(loc)
------------------------------------------------------------
X copy(X a) { return a; }

X(const X& x) { out("X(X&)", x.val); val=x.val; }
this->X(X&): val (x.val)
copy.a->X(X&): copy.a.val (loc.val)

  copy.a : 0x7ffc68885a40->X(X&) : 1753766480 (5)

# copy.a.val = loc.val = 5

X(const X& x) { out("X(X&)", x.val); val=x.val; }
this->X(X&): val (x.val)
ret->X(X&): ret.val (copy.a.val)

  ret    : 0x7ffc68885a50->X(X&) : 1852385368 (5)

# ret.val = copy.a.val = 5

  loc2   : 0x7ffc68885a20->X::operator=(): 4 (5)
  ret    : 0x7ffc68885a50->~X(): 5 (0)
  copy.a : 0x7ffc68885a40->~X(): 5 (0)
============================================================
loc2 = copy2(loc)
------------------------------------------------------------
X copy2(X a) { X aa = a; return aa; }

X(const X& x) { out("X(X&)", x.val); val=x.val; }
this->X(X&): val (x.val)
copy2.a->X(X&): copy2.a.val (loc.val)

  copy2.a  : 0x7ffc68885a60->X(X&) : 6303968 (5)

# copy2.a.val = 5

X(const X& x) { out("X(X&)", x.val); val=x.val; }
this->X(X&): val (x.val)
copy2.aa->X(X&): copy2.aa.val (copy2.a.val)

  copy2.aa : 0x7ffc68885a70->X(X&) : 1 (5)

# copy2.aa.val = 5

X& operator=(const X& a) { out("X::operator=()", a.val); val=a.val; return *this; }
this->X::operator=(): val (a.val)
loc2->X::operator=(): loc2.val (copy2.aa.val)

  loc2     : 0x7ffc68885a20->X::operator=(): 5 (5)

# loc2.val = 5

~X() { out("~X()", 0); }
this->~X(): val (v)
copy2.aa->~X(): copy2.aa.val (v)

  copy2.aa : 0x7ffc68885a70->~X(): 5 (0)
  
~X() { out("~X()", 0); }
this->~X(): val (v)
copy2.a->~X(): copy2.a.val (v)

  copy2.a  : 0x7ffc68885a60->~X(): 5 (0)

============================================================
X loc3(6)
------------------------------------------------------------
X(int v) { out("X(int)", v); val=v; }
this->X(int): val (v)
loc3->X(int): loc3.val (6)

  loc3  : 0x7ffc68885a80->X(int): 6303208 (6)

# loc3.val = 6
============================================================
X& r = ref_to(loc)
------------------------------------------------------------
X& ref_to(X& a) { return a; }

X型のオブジェクトaの別名を返す
rはaの別名（参照）なので、オブジェクトは作成されない

============================================================
delete make(7)
------------------------------------------------------------
X* make(int i) { X a(i); return new X(a); }
=>
make.a(i)
  make.a(7) : 0x7ffc688859e0->X(int): 690509950 (7)
make.X(a)
  make.X(a) : 0x2365c20->X(X&) : 0 (7)
go out from local scope of function:make
  make.a(7) : 0x7ffc688859e0->~X(): 7 (0)
  
delete make(7) = delete make.X(a)
  make.X(a) : 0x2365c20->~X(): 7 (0)

============================================================
delete make(8)
------------------------------------------------------------
X* make(int i) { X a(i); return new X(a); }
=>
make.a(i)
  make.(8) : 0x7ffc688859e0->X(int): 37116960 (8)
make.X(a)
  make.(a) : 0x2365c20->X(X&) : 0 (8)
go out from local scope of function:make
  make.(8) : 0x7ffc688859e0->~X(): 8 (0)

delete make(8) = delete make.X(a)
  make.(a) : 0 x2365c20->~X(): 8 (0)

============================================================
vector<X> v(4)
------------------------------------------------------------
  v[0]  : 0x2365c20->X(): 0 (0)
  v[1]  : 0x2365c24->X(): 0 (0)
  v[2]  : 0x2365c28->X(): 0 (0)
  v[3]  : 0x2365c2c->X(): 0 (0)

============================================================
XX loc4;
------------------------------------------------------------
  loc4     : 0x7ffc68885a90->X(): 1136 (0)
  loc4.val : 0x7ffc68885a94->X(): 0 (0)

============================================================
X* p = new X(9)
------------------------------------------------------------
  X(9)  : 0x2365c40->X(int): 0 (9)

============================================================
delete p;
------------------------------------------------------------
  X(9)  : 0x2365c40->~X(): 9 (0)
  
============================================================
X* pp = new X[5]
------------------------------------------------------------
  X[0]  : 0x2365c68->X(): 0 (0)
  X[1]  : 0x2365c6c->X(): 0 (0)
  X[2]  : 0x2365c70->X(): 0 (0)
  X[3]  : 0x2365c74->X(): 0 (0)
  X[4]  : 0x2365c78->X(): 0 (0)

============================================================
delete[] pp
------------------------------------------------------------
  X[4]  : 0x2365c78->~X(): 0 (0)
  X[3]  : 0x2365c74->~X(): 0 (0)
  X[2]  : 0x2365c70->~X(): 0 (0)
  X[1]  : 0x2365c6c->~X(): 0 (0)
  X[0]  : 0x2365c68->~X(): 0 (0)

============================================================
go out from local scope of function:main
------------------------------------------------------------
  loc4.val  : 0x7ffc68885a94->~X(): 0 (0)
  loc4      : 0x7ffc68885a90->~X(): 0 (0)

  vector<X> v(4)
  v[0]  : 0x2365c20->~X(): 0 (0)
  v[1]  : 0x2365c24->~X(): 0 (0)
  v[2]  : 0x2365c28->~X(): 0 (0)
  v[3]  : 0x2365c2c->~X(): 0 (0)
  
  loc3  : 0x7ffc68885a80->~X(): 6 (0)
  loc2  : 0x7ffc68885a20->~X(): 5 (0)
  loc   : 0x7ffc68885a10->~X(): 5 (0)
  glob  : 0x603214->~X(): 2 (0)

============================================================
